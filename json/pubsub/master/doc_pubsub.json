{"id":"pubsub/v1/doc/doc_pubsub","type":"class","overview":"<p>\n  This class allows you interact with Cloud Pub/Sub.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/pubsub</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/pubsub</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/pubsub</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar pubsub = require('@google-cloud/pubsub')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar pubsub = require('@google-cloud/pubsub')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/pubsub</code> are outlined in our <a href=\"#/docs/pubsub/v0.13.2/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js","parent":"pubsub","children":[],"methods":[{"id":"Topic","name":"Topic","type":"instance","description":"<p>A topic resource.</p>","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L36","resources":[],"examples":[],"params":[{"name":"name","description":"<p> The name of the topic. It must have the format  <code>&quot;projects/{project}/topics/{topic}&quot;</code>. <code>{topic}</code> must start with a letter,  and contain only letters (<code>[A-Za-z]</code>), numbers (<code>[0-9]</code>), dashes (<code>-</code>),  underscores (<code>_</code>), periods (<code>.</code>), tildes (<code>~</code>), plus (<code>+</code>) or percent  signs (<code>%</code>). It must be between 3 and 255 characters in length, and it  must not start with <code>&quot;goog&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"PubsubMessage","name":"PubsubMessage","type":"instance","description":"<p>A message data and its attributes. The message payload must not be empty; it must contain either a non-empty data field, or at least one attribute.</p>","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L66","resources":[],"examples":[],"params":[{"name":"data","description":"<p> The message payload.</p>","types":["string"],"optional":false,"nullable":false},{"name":"attributes","description":"<p> Optional attributes for this message.</p>","types":["Object.<string, string>"],"optional":false,"nullable":false},{"name":"messageId","description":"<p> ID of this message, assigned by the server when the message is published.  Guaranteed to be unique within the topic. This value may be read by a  subscriber that receives a <code>PubsubMessage</code> via a <code>Pull</code> call or a push  delivery. It must not be populated by the publisher in a <code>Publish</code> call.</p>","types":["string"],"optional":false,"nullable":false},{"name":"publishTime","description":"<p> The time at which the message was published, populated by the server when  it receives the <code>Publish</code> call. It must not be populated by the  publisher in a <code>Publish</code> call.</p><p> This object should have the same structure as google.protobuf.Timestamp</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"GetTopicRequest","name":"GetTopicRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L80","resources":[],"examples":[],"params":[{"name":"topic","description":"<p> The name of the topic to get.  Format is <code>projects/{project}/topics/{topic}</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"PublishRequest","name":"PublishRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L99","resources":[],"examples":[],"params":[{"name":"topic","description":"<p> The messages in the request will be published on this topic.  Format is <code>projects/{project}/topics/{topic}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"messages","description":"<p> The messages to publish.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PubsubMessage'\n        })\">PubsubMessage</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'PubsubMessage'\n        })\">PubsubMessage</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"PublishResponse","name":"PublishResponse","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L114","resources":[],"examples":[],"params":[{"name":"messageIds","description":"<p> The server-assigned ID of each published message, in the same order as  the messages in the request. IDs are guaranteed to be unique within  the topic.</p>","types":["string[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ListTopicsRequest","name":"ListTopicsRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L136","resources":[],"examples":[],"params":[{"name":"project","description":"<p> The name of the cloud project that topics belong to.  Format is <code>projects/{project}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"pageSize","description":"<p> Maximum number of topics to return.</p>","types":["number"],"optional":false,"nullable":false},{"name":"pageToken","description":"<p> The value returned by the last <code>ListTopicsResponse</code>; indicates that this is  a continuation of a prior <code>ListTopics</code> call, and that the system should  return the next page of data.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ListTopicsResponse","name":"ListTopicsResponse","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L155","resources":[],"examples":[],"params":[{"name":"topics","description":"<p> The resulting topics.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Topic'\n        })\">Topic</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Topic'\n        })\">Topic</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"nextPageToken","description":"<p> If not empty, indicates that there may be more topics that match the  request; this value should be passed in a new <code>ListTopicsRequest</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ListTopicSubscriptionsRequest","name":"ListTopicSubscriptionsRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L177","resources":[],"examples":[],"params":[{"name":"topic","description":"<p> The name of the topic that subscriptions are attached to.  Format is <code>projects/{project}/topics/{topic}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"pageSize","description":"<p> Maximum number of subscription names to return.</p>","types":["number"],"optional":false,"nullable":false},{"name":"pageToken","description":"<p> The value returned by the last <code>ListTopicSubscriptionsResponse</code>; indicates  that this is a continuation of a prior <code>ListTopicSubscriptions</code> call, and  that the system should return the next page of data.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ListTopicSubscriptionsResponse","name":"ListTopicSubscriptionsResponse","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L195","resources":[],"examples":[],"params":[{"name":"subscriptions","description":"<p> The names of the subscriptions that match the request.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"nextPageToken","description":"<p> If not empty, indicates that there may be more subscriptions that match  the request; this value should be passed in a new  <code>ListTopicSubscriptionsRequest</code> to get more subscriptions.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"DeleteTopicRequest","name":"DeleteTopicRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L209","resources":[],"examples":[],"params":[{"name":"topic","description":"<p> Name of the topic to delete.  Format is <code>projects/{project}/topics/{topic}</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Subscription","name":"Subscription","type":"instance","description":"<p>A subscription resource.</p>","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L277","resources":[],"examples":[],"params":[{"name":"name","description":"<p> The name of the subscription. It must have the format  <code>&quot;projects/{project}/subscriptions/{subscription}&quot;</code>. <code>{subscription}</code> must  start with a letter, and contain only letters (<code>[A-Za-z]</code>), numbers  (<code>[0-9]</code>), dashes (<code>-</code>), underscores (<code>_</code>), periods (<code>.</code>), tildes (<code>~</code>),  plus (<code>+</code>) or percent signs (<code>%</code>). It must be between 3 and 255 characters  in length, and it must not start with <code>&quot;goog&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"topic","description":"<p> The name of the topic from which this subscription is receiving messages.  Format is <code>projects/{project}/topics/{topic}</code>.  The value of this field will be <code>_deleted-topic_</code> if the topic has been  deleted.</p>","types":["string"],"optional":false,"nullable":false},{"name":"pushConfig","description":"<p> If push delivery is used with this subscription, this field is  used to configure it. An empty <code>pushConfig</code> signifies that the subscriber  will pull and ack messages using API methods.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PushConfig'\n        })\">PushConfig</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'PushConfig'\n        })\">PushConfig</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"ackDeadlineSeconds","description":"<p> This value is the maximum time after a subscriber receives a message  before the subscriber should acknowledge the message. After message  delivery but before the ack deadline expires and before the message is  acknowledged, it is an outstanding message and will not be delivered  again during that time (on a best-effort basis).</p><p> For pull subscriptions, this value is used as the initial value for the ack  deadline. To override this value for a given message, call  <code>ModifyAckDeadline</code> with the corresponding <code>ack_id</code> if using  pull.  The minimum custom deadline you can specify is 10 seconds.  The maximum custom deadline you can specify is 600 seconds (10 minutes).  If this parameter is 0, a default value of 10 seconds is used.</p><p> For push delivery, this value is also used to set the request timeout for  the call to the push endpoint.</p><p> If the subscriber never acknowledges the message, the Pub/Sub  system will eventually redeliver the message.</p>","types":["number"],"optional":false,"nullable":false},{"name":"retainAckedMessages","description":"<p> Indicates whether to retain acknowledged messages. If true, then  messages are not expunged from the subscription&#39;s backlog, even if they are  acknowledged, until they fall out of the <code>message_retention_duration</code>  window.</p>","types":["boolean"],"optional":false,"nullable":false},{"name":"messageRetentionDuration","description":"<p> How long to retain unacknowledged messages in the subscription&#39;s backlog,  from the moment a message is published.  If <code>retain_acked_messages</code> is true, then this also configures the retention  of acknowledged messages, and thus configures how far back in time a <code>Seek</code>  can be done. Defaults to 7 days. Cannot be more than 7 days or less than 10  minutes.</p><p> This object should have the same structure as google.protobuf.Duration</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"PushConfig","name":"PushConfig","type":"instance","description":"<p>Configuration for a push delivery endpoint.</p>","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L314","resources":[],"examples":[],"params":[{"name":"pushEndpoint","description":"<p> A URL locating the endpoint to which messages should be pushed.  For example, a Webhook endpoint might use &quot;<a href=\"https://example.com/push\">https://example.com/push</a>&quot;.</p>","types":["string"],"optional":false,"nullable":false},{"name":"attributes","description":"<p> Endpoint configuration attributes.</p><p> Every endpoint has a set of API supported attributes that can be used to  control different aspects of the message delivery.</p><p> The currently supported attribute is <code>x-goog-version</code>, which you can  use to change the format of the pushed message. This attribute  indicates the version of the data expected by the endpoint. This  controls the shape of the pushed message (i.e., its fields and metadata).  The endpoint version is based on the version of the Pub/Sub API.</p><p> If not present during the <code>CreateSubscription</code> call, it will default to  the version of the API used to make such call. If not present during a  <code>ModifyPushConfig</code> call, its value will not be changed. <code>GetSubscription</code>  calls will always return a valid version, even if the subscription was  created without this attribute.</p><p> The possible values for this attribute are:</p><ul> <li><code>v1beta1</code>: uses the push format defined in the v1beta1 Pub/Sub API.</li> <li><code>v1</code> or <code>v1beta2</code>: uses the push format defined in the v1 Pub/Sub API.</li> </ul> ","types":["Object.<string, string>"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ReceivedMessage","name":"ReceivedMessage","type":"instance","description":"<p>A message and its corresponding acknowledgment ID.</p>","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L332","resources":[],"examples":[],"params":[{"name":"ackId","description":"<p> This ID can be used to acknowledge the received message.</p>","types":["string"],"optional":false,"nullable":false},{"name":"message","description":"<p> The message.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PubsubMessage'\n        })\">PubsubMessage</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'PubsubMessage'\n        })\">PubsubMessage</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"GetSubscriptionRequest","name":"GetSubscriptionRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L346","resources":[],"examples":[],"params":[{"name":"subscription","description":"<p> The name of the subscription to get.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"UpdateSubscriptionRequest","name":"UpdateSubscriptionRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L367","resources":[],"examples":[],"params":[{"name":"subscription","description":"<p> The updated subscription object.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"updateMask","description":"<p> Indicates which fields in the provided subscription to update.  Must be specified and non-empty.</p><p> This object should have the same structure as google.protobuf.FieldMask</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ListSubscriptionsRequest","name":"ListSubscriptionsRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L389","resources":[],"examples":[],"params":[{"name":"project","description":"<p> The name of the cloud project that subscriptions belong to.  Format is <code>projects/{project}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"pageSize","description":"<p> Maximum number of subscriptions to return.</p>","types":["number"],"optional":false,"nullable":false},{"name":"pageToken","description":"<p> The value returned by the last <code>ListSubscriptionsResponse</code>; indicates that  this is a continuation of a prior <code>ListSubscriptions</code> call, and that the  system should return the next page of data.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ListSubscriptionsResponse","name":"ListSubscriptionsResponse","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L409","resources":[],"examples":[],"params":[{"name":"subscriptions","description":"<p> The subscriptions that match the request.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"nextPageToken","description":"<p> If not empty, indicates that there may be more subscriptions that match  the request; this value should be passed in a new  <code>ListSubscriptionsRequest</code> to get more subscriptions.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"DeleteSubscriptionRequest","name":"DeleteSubscriptionRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L423","resources":[],"examples":[],"params":[{"name":"subscription","description":"<p> The subscription to delete.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ModifyPushConfigRequest","name":"ModifyPushConfigRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L447","resources":[],"examples":[],"params":[{"name":"subscription","description":"<p> The name of the subscription.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"pushConfig","description":"<p> The push configuration for future deliveries.</p><p> An empty <code>pushConfig</code> indicates that the Pub/Sub system should  stop pushing messages from the given subscription and allow  messages to be pulled and acknowledged - effectively pausing  the subscription if <code>Pull</code> is not called.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PushConfig'\n        })\">PushConfig</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'PushConfig'\n        })\">PushConfig</a></p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"PullRequest","name":"PullRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L473","resources":[],"examples":[],"params":[{"name":"subscription","description":"<p> The subscription from which messages should be pulled.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"returnImmediately","description":"<p> If this field set to true, the system will respond immediately even if  it there are no messages available to return in the <code>Pull</code> response.  Otherwise, the system may wait (for a bounded amount of time) until at  least one message is available, rather than returning no messages. The  client may cancel the request if it does not wish to wait any longer for  the response.</p>","types":["boolean"],"optional":false,"nullable":false},{"name":"maxMessages","description":"<p> The maximum number of messages returned for this request. The Pub/Sub  system may return fewer than the number specified.</p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"PullResponse","name":"PullResponse","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L491","resources":[],"examples":[],"params":[{"name":"receivedMessages","description":"<p> Received Pub/Sub messages. The Pub/Sub system will return zero messages if  there are no more available in the backlog. The Pub/Sub system may return  fewer than the <code>maxMessages</code> requested even if there are more messages  available in the backlog.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ReceivedMessage'\n        })\">ReceivedMessage</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ReceivedMessage'\n        })\">ReceivedMessage</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ModifyAckDeadlineRequest","name":"ModifyAckDeadlineRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L517","resources":[],"examples":[],"params":[{"name":"subscription","description":"<p> The name of the subscription.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"ackIds","description":"<p> List of acknowledgment IDs.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"ackDeadlineSeconds","description":"<p> The new ack deadline with respect to the time this request was sent to  the Pub/Sub system. For example, if the value is 10, the new  ack deadline will expire 10 seconds after the <code>ModifyAckDeadline</code> call  was made. Specifying zero may immediately make the message available for  another pull request.  The minimum deadline you can specify is 0 seconds.  The maximum deadline you can specify is 600 seconds (10 minutes).</p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"AcknowledgeRequest","name":"AcknowledgeRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L535","resources":[],"examples":[],"params":[{"name":"subscription","description":"<p> The subscription whose message is being acknowledged.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"ackIds","description":"<p> The acknowledgment ID for the messages being acknowledged that was returned  by the Pub/Sub system in the <code>Pull</code> response. Must not be empty.</p>","types":["string[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"StreamingPullRequest","name":"StreamingPullRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L586","resources":[],"examples":[],"params":[{"name":"subscription","description":"<p> The subscription for which to initialize the new stream. This must be  provided in the first request on the stream, and must not be set in  subsequent requests from client to server.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"ackIds","description":"<p> List of acknowledgement IDs for acknowledging previously received messages  (received on this stream or a different stream). If an ack ID has expired,  the corresponding message may be redelivered later. Acknowledging a message  more than once will not result in an error. If the acknowledgement ID is  malformed, the stream will be aborted with status <code>INVALID_ARGUMENT</code>.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"modifyDeadlineSeconds","description":"<p> The list of new ack deadlines for the IDs listed in  <code>modify_deadline_ack_ids</code>. The size of this list must be the same as the  size of <code>modify_deadline_ack_ids</code>. If it differs the stream will be aborted  with <code>INVALID_ARGUMENT</code>. Each element in this list is applied to the  element in the same position in <code>modify_deadline_ack_ids</code>. The new ack  deadline is with respect to the time this request was sent to the Pub/Sub  system. Must be &gt;= 0. For example, if the value is 10, the new ack deadline  will expire 10 seconds after this request is received. If the value is 0,  the message is immediately made available for another streaming or  non-streaming pull request. If the value is &lt; 0 (an error), the stream will  be aborted with status <code>INVALID_ARGUMENT</code>.</p>","types":["number[]"],"optional":false,"nullable":false},{"name":"modifyDeadlineAckIds","description":"<p> List of acknowledgement IDs whose deadline will be modified based on the  corresponding element in <code>modify_deadline_seconds</code>. This field can be used  to indicate that more time is needed to process a message by the  subscriber, or to make the message available for redelivery if the  processing was interrupted.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"streamAckDeadlineSeconds","description":"<p> The ack deadline to use for the stream. This must be provided in the  first request on the stream, but it can also be updated on subsequent  requests from client to server. The minimum deadline you can specify is 10  seconds. The maximum deadline you can specify is 600 seconds (10 minutes).</p>","types":["number"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"StreamingPullResponse","name":"StreamingPullResponse","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L602","resources":[],"examples":[],"params":[{"name":"receivedMessages","description":"<p> Received Pub/Sub messages. This will not be empty.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ReceivedMessage'\n        })\">ReceivedMessage</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ReceivedMessage'\n        })\">ReceivedMessage</a></p>","types":["Object[]"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"CreateSnapshotRequest","name":"CreateSnapshotRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L630","resources":[],"examples":[],"params":[{"name":"name","description":"<p> Optional user-provided name for this snapshot.  If the name is not provided in the request, the server will assign a random  name for this snapshot on the same project as the subscription.  Note that for REST API requests, you must specify a name.  Format is <code>projects/{project}/snapshots/{snap}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"subscription","description":"<p> The subscription whose backlog the snapshot retains.  Specifically, the created snapshot is guaranteed to retain:  (a) The existing backlog on the subscription. More precisely, this is  defined as the messages in the subscription&#39;s backlog that are  unacknowledged upon the successful completion of the  <code>CreateSnapshot</code> request; as well as:  (b) Any messages published to the subscription&#39;s topic following the  successful completion of the CreateSnapshot request.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"Snapshot","name":"Snapshot","type":"instance","description":"<p>A snapshot resource.</p>","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L659","resources":[],"examples":[],"params":[{"name":"name","description":"<p> The name of the snapshot.</p>","types":["string"],"optional":false,"nullable":false},{"name":"topic","description":"<p> The name of the topic from which this snapshot is retaining messages.</p>","types":["string"],"optional":false,"nullable":false},{"name":"expireTime","description":"<p> The snapshot is guaranteed to exist up until this time.  A newly-created snapshot expires no later than 7 days from the time of its  creation. Its exact lifetime is determined at creation by the existing  backlog in the source subscription. Specifically, the lifetime of the  snapshot is <code>7 days - (age of oldest unacked message in the subscription)</code>.  For example, consider a subscription whose oldest unacked message is 3 days  old. If a snapshot is created from this subscription, the snapshot -- which  will always capture this 3-day-old backlog as long as the snapshot  exists -- will expire in 4 days.</p><p> This object should have the same structure as google.protobuf.Timestamp</p>","types":["Object"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ListSnapshotsRequest","name":"ListSnapshotsRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L681","resources":[],"examples":[],"params":[{"name":"project","description":"<p> The name of the cloud project that snapshots belong to.  Format is <code>projects/{project}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"pageSize","description":"<p> Maximum number of snapshots to return.</p>","types":["number"],"optional":false,"nullable":false},{"name":"pageToken","description":"<p> The value returned by the last <code>ListSnapshotsResponse</code>; indicates that this  is a continuation of a prior <code>ListSnapshots</code> call, and that the system  should return the next page of data.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"ListSnapshotsResponse","name":"ListSnapshotsResponse","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L700","resources":[],"examples":[],"params":[{"name":"snapshots","description":"<p> The resulting snapshots.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a></p>","types":["Object[]"],"optional":false,"nullable":false},{"name":"nextPageToken","description":"<p> If not empty, indicates that there may be more snapshot that match the  request; this value should be passed in a new <code>ListSnapshotsRequest</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"DeleteSnapshotRequest","name":"DeleteSnapshotRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L714","resources":[],"examples":[],"params":[{"name":"snapshot","description":"<p> The name of the snapshot to delete.  Format is <code>projects/{project}/snapshots/{snap}</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"SeekRequest","name":"SeekRequest","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L747","resources":[],"examples":[],"params":[{"name":"subscription","description":"<p> The subscription to affect.</p>","types":["string"],"optional":false,"nullable":false},{"name":"time","description":"<p> The time to seek to.  Messages retained in the subscription that were published before this  time are marked as acknowledged, and messages retained in the  subscription that were published after this time are marked as  unacknowledged. Note that this operation affects only those messages  retained in the subscription (configured by the combination of  <code>message_retention_duration</code> and <code>retain_acked_messages</code>). For example,  if <code>time</code> corresponds to a point before the message retention  window (or to a point before the system&#39;s notion of the subscription  creation time), only retained messages will be marked as unacknowledged,  and already-expunged messages will not be restored.</p><p> This object should have the same structure as google.protobuf.Timestamp</p>","types":["Object"],"optional":false,"nullable":false},{"name":"snapshot","description":"<p> The snapshot to seek to. The snapshot&#39;s topic must be the same as that of  the provided subscription.  Format is <code>projects/{project}/snapshots/{snap}</code>.</p>","types":["string"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"SeekResponse","name":"SeekResponse","type":"instance","description":"","source":"packages\\pubsub\\src\\v1\\doc\\doc_pubsub.js#L755","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]}],"path":"doc_pubsub.json"}