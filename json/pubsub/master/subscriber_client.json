{"id":"pubsub/v1/subscriber_client","type":"class","overview":"<p>\n  This class allows you interact with Cloud Pub/Sub.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/pubsub</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/pubsub</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/pubsub</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar pubsub = require('@google-cloud/pubsub')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar pubsub = require('@google-cloud/pubsub')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/pubsub</code> are outlined in our <a href=\"#/docs/pubsub/v0.13.2/guides/authentication\">Authentication guide</a>.\n</p>\n","source":"packages\\pubsub\\src\\v1\\subscriber_client.js","parent":"pubsub","children":[],"methods":[{"id":"SubscriberClient","name":"SubscriberClient","type":"constructor","description":"<p>The service that an application uses to manipulate subscriptions and to consume messages from a subscription via the <code>Pull</code> method.</p><p>This will be created through a builder function which can be obtained by the module. See the following example of how to initialize the module and how to access to the builder.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L80","resources":[],"examples":[{"code":"var pubsubV1 = require('@google-cloud/pubsub').v1({\n  // optional auth parameters.\n});\nvar client = pubsubV1.subscriberClient();"}],"params":[],"exceptions":[],"returns":[]},{"id":"projectPath","name":"projectPath","type":"instance","description":"<p>Returns a fully-qualified project resource name string.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L179","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromProjectName","name":"matchProjectFromProjectName","type":"instance","description":"<p>Parses the projectName from a project resource.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L191","resources":[],"examples":[],"params":[{"name":"projectName","description":"<p> A fully-qualified path representing a project resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"snapshotPath","name":"snapshotPath","type":"instance","description":"<p>Returns a fully-qualified snapshot resource name string.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L201","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false},{"name":"snapshot","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromSnapshotName","name":"matchProjectFromSnapshotName","type":"instance","description":"<p>Parses the snapshotName from a snapshot resource.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L214","resources":[],"examples":[],"params":[{"name":"snapshotName","description":"<p> A fully-qualified path representing a snapshot resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchSnapshotFromSnapshotName","name":"matchSnapshotFromSnapshotName","type":"instance","description":"<p>Parses the snapshotName from a snapshot resource.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L224","resources":[],"examples":[],"params":[{"name":"snapshotName","description":"<p> A fully-qualified path representing a snapshot resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"subscriptionPath","name":"subscriptionPath","type":"instance","description":"<p>Returns a fully-qualified subscription resource name string.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L234","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false},{"name":"subscription","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromSubscriptionName","name":"matchProjectFromSubscriptionName","type":"instance","description":"<p>Parses the subscriptionName from a subscription resource.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L247","resources":[],"examples":[],"params":[{"name":"subscriptionName","description":"<p> A fully-qualified path representing a subscription resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchSubscriptionFromSubscriptionName","name":"matchSubscriptionFromSubscriptionName","type":"instance","description":"<p>Parses the subscriptionName from a subscription resource.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L257","resources":[],"examples":[],"params":[{"name":"subscriptionName","description":"<p> A fully-qualified path representing a subscription resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"topicPath","name":"topicPath","type":"instance","description":"<p>Returns a fully-qualified topic resource name string.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L267","resources":[],"examples":[],"params":[{"name":"project","description":"","types":["String"],"optional":false,"nullable":false},{"name":"topic","description":"","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchProjectFromTopicName","name":"matchProjectFromTopicName","type":"instance","description":"<p>Parses the topicName from a topic resource.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L280","resources":[],"examples":[],"params":[{"name":"topicName","description":"<p> A fully-qualified path representing a topic resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"matchTopicFromTopicName","name":"matchTopicFromTopicName","type":"instance","description":"<p>Parses the topicName from a topic resource.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L290","resources":[],"examples":[],"params":[{"name":"topicName","description":"<p> A fully-qualified path representing a topic resources.</p>","types":["String"],"optional":false,"nullable":false}],"exceptions":[],"returns":[]},{"id":"getProjectId","name":"getProjectId","type":"instance","description":"<p>Get the project ID used by this class.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L299","resources":[],"examples":[],"params":[],"exceptions":[],"returns":[]},{"id":"createSubscription","name":"createSubscription","type":"instance","description":"<p>Creates a subscription to a given topic. If the subscription already exists, returns <code>ALREADY_EXISTS</code>. If the corresponding topic doesn&#39;t exist, returns <code>NOT_FOUND</code>.</p><p>If the name is not provided in the request, the server will assign a random name for this subscription on the same project as the topic, conforming to the <a href=\"https://cloud.google.com/pubsub/docs/overview#names\">resource name format</a>. The generated name is populated in the returned Subscription object. Note that for REST API requests, you must specify a name in the request.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L398","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedName = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nvar formattedTopic = client.topicPath(\"[PROJECT]\", \"[TOPIC]\");\nvar request = {\n    name: formattedName,\n    topic: formattedTopic\n};\nclient.createSubscription(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> The name of the subscription. It must have the format  <code>&quot;projects/{project}/subscriptions/{subscription}&quot;</code>. <code>{subscription}</code> must  start with a letter, and contain only letters (<code>[A-Za-z]</code>), numbers  (<code>[0-9]</code>), dashes (<code>-</code>), underscores (<code>_</code>), periods (<code>.</code>), tildes (<code>~</code>),  plus (<code>+</code>) or percent signs (<code>%</code>). It must be between 3 and 255 characters  in length, and it must not start with <code>&quot;goog&quot;</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.topic","description":"<p> The name of the topic from which this subscription is receiving messages.  Format is <code>projects/{project}/topics/{topic}</code>.  The value of this field will be <code>_deleted-topic_</code> if the topic has been  deleted.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.pushConfig","description":"<p> If push delivery is used with this subscription, this field is  used to configure it. An empty <code>pushConfig</code> signifies that the subscriber  will pull and ack messages using API methods.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PushConfig'\n        })\">PushConfig</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'PushConfig'\n        })\">PushConfig</a></p>","types":["Object"],"optional":true,"nullable":false},{"name":"request.ackDeadlineSeconds","description":"<p> This value is the maximum time after a subscriber receives a message  before the subscriber should acknowledge the message. After message  delivery but before the ack deadline expires and before the message is  acknowledged, it is an outstanding message and will not be delivered  again during that time (on a best-effort basis).</p><p> For pull subscriptions, this value is used as the initial value for the ack  deadline. To override this value for a given message, call  <code>ModifyAckDeadline</code> with the corresponding <code>ack_id</code> if using  pull.  The minimum custom deadline you can specify is 10 seconds.  The maximum custom deadline you can specify is 600 seconds (10 minutes).  If this parameter is 0, a default value of 10 seconds is used.</p><p> For push delivery, this value is also used to set the request timeout for  the call to the push endpoint.</p><p> If the subscriber never acknowledges the message, the Pub/Sub  system will eventually redeliver the message.</p>","types":["number"],"optional":true,"nullable":false},{"name":"request.retainAckedMessages","description":"<p> Indicates whether to retain acknowledged messages. If true, then  messages are not expunged from the subscription&#39;s backlog, even if they are  acknowledged, until they fall out of the <code>message_retention_duration</code>  window.</p>","types":["boolean"],"optional":true,"nullable":false},{"name":"request.messageRetentionDuration","description":"<p> How long to retain unacknowledged messages in the subscription&#39;s backlog,  from the moment a message is published.  If <code>retain_acked_messages</code> is true, then this also configures the retention  of acknowledged messages, and thus configures how far back in time a <code>Seek</code>  can be done. Defaults to 7 days. Cannot be more than 7 days or less than 10  minutes.</p><p> This object should have the same structure as google.protobuf.Duration</p>","types":["Object"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"getSubscription","name":"getSubscription","type":"instance","description":"<p>Gets the configuration details of a subscription.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L440","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedSubscription = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nclient.getSubscription({subscription: formattedSubscription}).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.subscription","description":"<p> The name of the subscription to get.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"updateSubscription","name":"updateSubscription","type":"instance","description":"<p>Updates an existing subscription. Note that certain properties of a subscription, such as its topic, are not modifiable.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L494","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar subscription = {};\nvar updateMask = {};\nvar request = {\n    subscription: subscription,\n    updateMask: updateMask\n};\nclient.updateSubscription(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.subscription","description":"<p> The updated subscription object.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.updateMask","description":"<p> Indicates which fields in the provided subscription to update.  Must be specified and non-empty.</p><p> This object should have the same structure as google.protobuf.FieldMask</p>","types":["Object"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"listSubscriptions","name":"listSubscriptions","type":"instance","description":"<p>Lists matching subscriptions.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L580","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedProject = client.projectPath(\"[PROJECT]\");\n// Iterate over all elements.\nclient.listSubscriptions({project: formattedProject}).then(function(responses) {\n    var resources = responses[0];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i])\n    }\n}).catch(function(err) {\n    console.error(err);\n});\n\n// Or obtain the paged response.\nvar options = {autoPaginate: false};\nfunction callback(responses) {\n    // The actual resources in a response.\n    var resources = responses[0];\n    // The next request if the response shows there's more responses.\n    var nextRequest = responses[1];\n    // The actual response object, if necessary.\n    // var rawResponse = responses[2];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i]);\n    }\n    if (nextRequest) {\n        // Fetch the next page.\n        return client.listSubscriptions(nextRequest, options).then(callback);\n    }\n}\nclient.listSubscriptions({project: formattedProject}, options)\n    .then(callback)\n    .catch(function(err) {\n        console.error(err);\n    });"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.project","description":"<p> The name of the cloud project that subscriptions belong to.  Format is <code>projects/{project}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is Array of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>.</p><p> When autoPaginate: false is specified through options, it contains the result  in a single response. If the response indicates the next page exists, the third  parameter is set to be used for the next request object. The fourth parameter keeps  the raw response object of an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListSubscriptionsResponse'\n        })\">ListSubscriptionsResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ListSubscriptionsResponse'\n        })\">ListSubscriptionsResponse</a>.</p>","types":["function(Error|null, Array|null, Object|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li><p>The promise which resolves to an array. The first element of the array is Array of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>.</p><p>When autoPaginate: false is specified through options, the array has three elements. The first element is Array of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a> in a single response. The second element is the next request object if the response indicates the next page exists, or null. The third element is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListSubscriptionsResponse'\n        })\">ListSubscriptionsResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ListSubscriptionsResponse'\n        })\">ListSubscriptionsResponse</a>.</p><p>The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</p></li> </ul> "}]},{"id":"listSubscriptionsStream","name":"listSubscriptionsStream","type":"instance","description":"<p>Equivalent to {@link listSubscriptions}, but returns a NodeJS Stream object.</p><p>This fetches the paged responses for {@link listSubscriptions} continuously and invokes the callback registered for &#39;data&#39; event for each element in the responses.</p><p>The returned object has &#39;end&#39; method when no more elements are required.</p><p>autoPaginate option will be ignored.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L632","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedProject = client.projectPath(\"[PROJECT]\");\nclient.listSubscriptionsStream({project: formattedProject}).on('data', function(element) {\n    // doThingsWith(element)\n}).on('error', function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.project","description":"<p> The name of the cloud project that subscriptions belong to.  Format is <code>projects/{project}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Stream"],"description":"<p> An object stream which emits an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Subscription'\n        })\">Subscription</a> on &#39;data&#39; event.</p>"}]},{"id":"deleteSubscription","name":"deleteSubscription","type":"instance","description":"<p>Deletes an existing subscription. All messages retained in the subscription are immediately dropped. Calls to <code>Pull</code> after deletion will return <code>NOT_FOUND</code>. After a subscription is deleted, a new one may be created with the same name, but the new one has no association with the old subscription or its topic unless the same topic is specified.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L668","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedSubscription = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nclient.deleteSubscription({subscription: formattedSubscription}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.subscription","description":"<p> The subscription to delete.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p>","types":["function(Error|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves when API call finishes. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"modifyAckDeadline","name":"modifyAckDeadline","type":"instance","description":"<p>Modifies the ack deadline for a specific message. This method is useful to indicate that more time is needed to process a message by the subscriber, or to make the message available for redelivery if the processing was interrupted. Note that this does not modify the subscription-level <code>ackDeadlineSeconds</code> used for subsequent messages.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L725","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedSubscription = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nvar ackIds = [];\nvar ackDeadlineSeconds = 0;\nvar request = {\n    subscription: formattedSubscription,\n    ackIds: ackIds,\n    ackDeadlineSeconds: ackDeadlineSeconds\n};\nclient.modifyAckDeadline(request).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.subscription","description":"<p> The name of the subscription.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.ackIds","description":"<p> List of acknowledgment IDs.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"request.ackDeadlineSeconds","description":"<p> The new ack deadline with respect to the time this request was sent to  the Pub/Sub system. For example, if the value is 10, the new  ack deadline will expire 10 seconds after the <code>ModifyAckDeadline</code> call  was made. Specifying zero may immediately make the message available for  another pull request.  The minimum deadline you can specify is 0 seconds.  The maximum deadline you can specify is 600 seconds (10 minutes).</p>","types":["number"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p>","types":["function(Error|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves when API call finishes. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"acknowledge","name":"acknowledge","type":"instance","description":"<p>Acknowledges the messages associated with the <code>ack_ids</code> in the <code>AcknowledgeRequest</code>. The Pub/Sub system can remove the relevant messages from the subscription.</p><p>Acknowledging a message whose ack deadline has expired may succeed, but such a message may be redelivered later. Acknowledging a message more than once will not result in an error.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L775","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedSubscription = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nvar ackIds = [];\nvar request = {\n    subscription: formattedSubscription,\n    ackIds: ackIds\n};\nclient.acknowledge(request).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.subscription","description":"<p> The subscription whose message is being acknowledged.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.ackIds","description":"<p> The acknowledgment ID for the messages being acknowledged that was returned  by the Pub/Sub system in the <code>Pull</code> response. Must not be empty.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p>","types":["function(Error|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves when API call finishes. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"pull","name":"pull","type":"instance","description":"<p>Pulls messages from the server. Returns an empty list if there are no messages available in the backlog. The server may return <code>UNAVAILABLE</code> if there are too many concurrent pull requests pending for the given subscription.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L835","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedSubscription = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nvar maxMessages = 0;\nvar request = {\n    subscription: formattedSubscription,\n    maxMessages: maxMessages\n};\nclient.pull(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.subscription","description":"<p> The subscription from which messages should be pulled.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.maxMessages","description":"<p> The maximum number of messages returned for this request. The Pub/Sub  system may return fewer than the number specified.</p>","types":["number"],"optional":false,"nullable":false},{"name":"request.returnImmediately","description":"<p> If this field set to true, the system will respond immediately even if  it there are no messages available to return in the <code>Pull</code> response.  Otherwise, the system may wait (for a bounded amount of time) until at  least one message is available, rather than returning no messages. The  client may cancel the request if it does not wish to wait any longer for  the response.</p>","types":["boolean"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PullResponse'\n        })\">PullResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'PullResponse'\n        })\">PullResponse</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PullResponse'\n        })\">PullResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'PullResponse'\n        })\">PullResponse</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"streamingPull","name":"streamingPull","type":"instance","description":"<p>(EXPERIMENTAL) StreamingPull is an experimental feature. This RPC will respond with UNIMPLEMENTED errors unless you have been invited to test this feature. Contact cloud-pubsub@google.com with any questions.</p><p>Establishes a stream with the server, which sends messages down to the client. The client streams acknowledgements and ack deadline modifications back to the server. The server will close the stream and return the status on any error. The server may close the stream with status <code>OK</code> to reassign server-side resources, in which case, the client should re-establish the stream. <code>UNAVAILABLE</code> may also be returned in the case of a transient error (e.g., a server restart). These should also be retried by the client. Flow control can be achieved by configuring the underlying RPC channel.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L887","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar stream = client.streamingPull().on('data', function(response) {\n    // doThingsWith(response);\n});\nvar formattedSubscription = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nvar streamAckDeadlineSeconds = 0;\nvar request = {\n    subscription : formattedSubscription,\n    streamAckDeadlineSeconds : streamAckDeadlineSeconds\n};\nvar request = {\n    root: request\n};\n// Write request objects.\nstream.write(request);"}],"params":[{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]},{"id":"modifyPushConfig","name":"modifyPushConfig","type":"instance","description":"<p>Modifies the <code>PushConfig</code> for a specified subscription.</p><p>This may be used to change a push subscription to a pull one (signified by an empty <code>PushConfig</code>) or vice versa, or change the endpoint URL and other attributes of a push subscription. Messages will accumulate for delivery continuously through the call regardless of changes to the <code>PushConfig</code>.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L938","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedSubscription = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nvar pushConfig = {};\nvar request = {\n    subscription: formattedSubscription,\n    pushConfig: pushConfig\n};\nclient.modifyPushConfig(request).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.subscription","description":"<p> The name of the subscription.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.pushConfig","description":"<p> The push configuration for future deliveries.</p><p> An empty <code>pushConfig</code> indicates that the Pub/Sub system should  stop pushing messages from the given subscription and allow  messages to be pulled and acknowledged - effectively pausing  the subscription if <code>Pull</code> is not called.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'PushConfig'\n        })\">PushConfig</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'PushConfig'\n        })\">PushConfig</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p>","types":["function(Error|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves when API call finishes. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"listSnapshots","name":"listSnapshots","type":"instance","description":"<p>Lists the existing snapshots.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L1024","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedProject = client.projectPath(\"[PROJECT]\");\n// Iterate over all elements.\nclient.listSnapshots({project: formattedProject}).then(function(responses) {\n    var resources = responses[0];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i])\n    }\n}).catch(function(err) {\n    console.error(err);\n});\n\n// Or obtain the paged response.\nvar options = {autoPaginate: false};\nfunction callback(responses) {\n    // The actual resources in a response.\n    var resources = responses[0];\n    // The next request if the response shows there's more responses.\n    var nextRequest = responses[1];\n    // The actual response object, if necessary.\n    // var rawResponse = responses[2];\n    for (var i = 0; i < resources.length; ++i) {\n        // doThingsWith(resources[i]);\n    }\n    if (nextRequest) {\n        // Fetch the next page.\n        return client.listSnapshots(nextRequest, options).then(callback);\n    }\n}\nclient.listSnapshots({project: formattedProject}, options)\n    .then(callback)\n    .catch(function(err) {\n        console.error(err);\n    });"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.project","description":"<p> The name of the cloud project that snapshots belong to.  Format is <code>projects/{project}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is Array of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>.</p><p> When autoPaginate: false is specified through options, it contains the result  in a single response. If the response indicates the next page exists, the third  parameter is set to be used for the next request object. The fourth parameter keeps  the raw response object of an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListSnapshotsResponse'\n        })\">ListSnapshotsResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ListSnapshotsResponse'\n        })\">ListSnapshotsResponse</a>.</p>","types":["function(Error|null, Array|null, Object|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li><p>The promise which resolves to an array. The first element of the array is Array of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>.</p><p>When autoPaginate: false is specified through options, the array has three elements. The first element is Array of <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a> in a single response. The second element is the next request object if the response indicates the next page exists, or null. The third element is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'ListSnapshotsResponse'\n        })\">ListSnapshotsResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'ListSnapshotsResponse'\n        })\">ListSnapshotsResponse</a>.</p><p>The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</p></li> </ul> "}]},{"id":"listSnapshotsStream","name":"listSnapshotsStream","type":"instance","description":"<p>Equivalent to {@link listSnapshots}, but returns a NodeJS Stream object.</p><p>This fetches the paged responses for {@link listSnapshots} continuously and invokes the callback registered for &#39;data&#39; event for each element in the responses.</p><p>The returned object has &#39;end&#39; method when no more elements are required.</p><p>autoPaginate option will be ignored.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L1076","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedProject = client.projectPath(\"[PROJECT]\");\nclient.listSnapshotsStream({project: formattedProject}).on('data', function(element) {\n    // doThingsWith(element)\n}).on('error', function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.project","description":"<p> The name of the cloud project that snapshots belong to.  Format is <code>projects/{project}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.pageSize","description":"<p> The maximum number of resources contained in the underlying API  response. If page streaming is performed per-resource, this  parameter does not affect the return value. If page streaming is  performed per-page, this determines the maximum number of  resources in a page.</p>","types":["number"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Stream"],"description":"<p> An object stream which emits an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a> on &#39;data&#39; event.</p>"}]},{"id":"createSnapshot","name":"createSnapshot","type":"instance","description":"<p>Creates a snapshot from the requested subscription. If the snapshot already exists, returns <code>ALREADY_EXISTS</code>. If the requested subscription doesn&#39;t exist, returns <code>NOT_FOUND</code>.</p><p>If the name is not provided in the request, the server will assign a random name for this snapshot on the same project as the subscription, conforming to the <a href=\"https://cloud.google.com/pubsub/docs/overview#names\">resource name format</a>. The generated name is populated in the returned Snapshot object. Note that for REST API requests, you must specify a name in the request.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L1141","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedName = client.snapshotPath(\"[PROJECT]\", \"[SNAPSHOT]\");\nvar formattedSubscription = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nvar request = {\n    name: formattedName,\n    subscription: formattedSubscription\n};\nclient.createSnapshot(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.name","description":"<p> Optional user-provided name for this snapshot.  If the name is not provided in the request, the server will assign a random  name for this snapshot on the same project as the subscription.  Note that for REST API requests, you must specify a name.  Format is <code>projects/{project}/snapshots/{snap}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.subscription","description":"<p> The subscription whose backlog the snapshot retains.  Specifically, the created snapshot is guaranteed to retain:  (a) The existing backlog on the subscription. More precisely, this is  defined as the messages in the subscription&#39;s backlog that are  unacknowledged upon the successful completion of the  <code>CreateSnapshot</code> request; as well as:  (b) Any messages published to the subscription&#39;s topic following the  successful completion of the CreateSnapshot request.  Format is <code>projects/{project}/subscriptions/{sub}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Snapshot'\n        })\">Snapshot</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"deleteSnapshot","name":"deleteSnapshot","type":"instance","description":"<p>Removes an existing snapshot. All messages retained in the snapshot are immediately dropped. After a snapshot is deleted, a new one may be created with the same name, but the new one has no association with the old snapshot or its subscription, unless the same subscription is specified.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L1180","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedSnapshot = client.snapshotPath(\"[PROJECT]\", \"[SNAPSHOT]\");\nclient.deleteSnapshot({snapshot: formattedSnapshot}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.snapshot","description":"<p> The name of the snapshot to delete.  Format is <code>projects/{project}/snapshots/{snap}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p>","types":["function(Error|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves when API call finishes. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"seek","name":"seek","type":"instance","description":"<p>Seeks an existing subscription to a point in time or to a given snapshot, whichever is provided in the request.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L1240","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedSubscription = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nclient.seek({subscription: formattedSubscription}).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.subscription","description":"<p> The subscription to affect.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.time","description":"<p> The time to seek to.  Messages retained in the subscription that were published before this  time are marked as acknowledged, and messages retained in the  subscription that were published after this time are marked as  unacknowledged. Note that this operation affects only those messages  retained in the subscription (configured by the combination of  <code>message_retention_duration</code> and <code>retain_acked_messages</code>). For example,  if <code>time</code> corresponds to a point before the message retention  window (or to a point before the system&#39;s notion of the subscription  creation time), only retained messages will be marked as unacknowledged,  and already-expunged messages will not be restored.</p><p> This object should have the same structure as google.protobuf.Timestamp</p>","types":["Object"],"optional":true,"nullable":false},{"name":"request.snapshot","description":"<p> The snapshot to seek to. The snapshot&#39;s topic must be the same as that of  the provided subscription.  Format is <code>projects/{project}/snapshots/{snap}</code>.</p>","types":["string"],"optional":true,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'SeekResponse'\n        })\">SeekResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'SeekResponse'\n        })\">SeekResponse</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'SeekResponse'\n        })\">SeekResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'SeekResponse'\n        })\">SeekResponse</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"setIamPolicy","name":"setIamPolicy","type":"instance","description":"<p>Sets the access control policy on the specified resource. Replaces any existing policy.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L1296","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedResource = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nvar policy = {};\nvar request = {\n    resource: formattedResource,\n    policy: policy\n};\nclient.setIamPolicy(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.resource","description":"<p> REQUIRED: The resource for which the policy is being specified.  <code>resource</code> is usually specified as a path. For example, a Project  resource is specified as <code>projects/{project}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.policy","description":"<p> REQUIRED: The complete policy to be applied to the <code>resource</code>. The size of  the policy is limited to a few 10s of KB. An empty policy is a  valid policy but certain Cloud Platform services (such as Projects)  might reject them.</p><p> This object should have the same structure as <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Policy'\n        })\">Policy</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Policy'\n        })\">Policy</a></p>","types":["Object"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Policy'\n        })\">Policy</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Policy'\n        })\">Policy</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Policy'\n        })\">Policy</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Policy'\n        })\">Policy</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"getIamPolicy","name":"getIamPolicy","type":"instance","description":"<p>Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L1341","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedResource = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nclient.getIamPolicy({resource: formattedResource}).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.resource","description":"<p> REQUIRED: The resource for which the policy is being requested.  <code>resource</code> is usually specified as a path. For example, a Project  resource is specified as <code>projects/{project}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Policy'\n        })\">Policy</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Policy'\n        })\">Policy</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'Policy'\n        })\">Policy</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'Policy'\n        })\">Policy</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"testIamPermissions","name":"testIamPermissions","type":"instance","description":"<p>Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L1396","resources":[],"examples":[{"code":"\nvar client = pubsubV1.subscriberClient();\nvar formattedResource = client.subscriptionPath(\"[PROJECT]\", \"[SUBSCRIPTION]\");\nvar permissions = [];\nvar request = {\n    resource: formattedResource,\n    permissions: permissions\n};\nclient.testIamPermissions(request).then(function(responses) {\n    var response = responses[0];\n    // doThingsWith(response)\n}).catch(function(err) {\n    console.error(err);\n});"}],"params":[{"name":"request","description":"<p> The request object that will be sent.</p>","types":["Object"],"optional":false,"nullable":false},{"name":"request.resource","description":"<p> REQUIRED: The resource for which the policy detail is being requested.  <code>resource</code> is usually specified as a path. For example, a Project  resource is specified as <code>projects/{project}</code>.</p>","types":["string"],"optional":false,"nullable":false},{"name":"request.permissions","description":"<p> The set of permissions to check for the <code>resource</code>. Permissions with  wildcards (such as &#39;<em>&#39; or &#39;storage.</em>&#39;) are not allowed. For more  information see  <a href=\"https://cloud.google.com/iam/docs/overview#permissions\">IAM Overview</a>.</p>","types":["string[]"],"optional":false,"nullable":false},{"name":"options","description":"<p> Optional parameters. You can override the default settings for this call, e.g, timeout,  retries, paginations, etc. See <a href=\"https://googleapis.github.io/gax-nodejs/global.html#CallOptions\">gax.CallOptions</a> for the details.</p>","types":["Object"],"optional":true,"nullable":false},{"name":"callback","description":"<p> The function which will be called with the result of the API call.</p><p> The second parameter to the callback is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TestIamPermissionsResponse'\n        })\">TestIamPermissionsResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TestIamPermissionsResponse'\n        })\">TestIamPermissionsResponse</a>.</p>","types":["function(Error|null, Object|null)"],"optional":true,"nullable":false}],"exceptions":[],"returns":[{"types":["Promise"],"description":"<ul> <li>The promise which resolves to an array. The first element of the array is an object representing <a ng-if=\"service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.parent}}/{{service.path.split('/').shift()}}/data_types',\n          method: 'TestIamPermissionsResponse'\n        })\">TestIamPermissionsResponse</a>\n\n        <a ng-if=\"!service.parent\" ui-sref=\"docs.service({\n          serviceId: '{{service.title.split('V')[0] + '/v' + service.title.split('V')[1]}}/data_types',\n          method: 'TestIamPermissionsResponse'\n        })\">TestIamPermissionsResponse</a>. The promise has a method named &quot;cancel&quot; which cancels the ongoing API call.</li> </ul> "}]},{"id":"subscriberClient","name":"subscriberClient","type":"instance","description":"<p>Build a new instance of {@link SubscriberClient}.</p>","source":"packages\\pubsub\\src\\v1\\subscriber_client.js#L1446","resources":[],"examples":[],"params":[{"name":"opts","description":"<ul> <li>The optional parameters.</li> </ul> ","types":["Object"],"optional":true,"nullable":false},{"name":"opts.servicePath","description":"<p> The domain name of the API remote host.</p>","types":["String"],"optional":true,"nullable":false},{"name":"opts.port","description":"<p> The port on which to connect to the remote host.</p>","types":["number"],"optional":true,"nullable":false},{"name":"opts.sslCreds","description":"<p> A ClientCredentials for use with an SSL-enabled channel.</p>","types":["grpc.ClientCredentials"],"optional":true,"nullable":false},{"name":"opts.clientConfig","description":"<p> The customized config to build the call settings. See  {@link gax.constructSettings} for the format.</p>","types":["Object"],"optional":true,"nullable":false}],"exceptions":[],"returns":[]}],"path":"subscriber_client.json"}