{"id":"pubsub/publisher","type":"class","name":"Publisher","overview":"<p>\n  This class allows you interact with Cloud Pub/Sub.\n</p>\n\n\n\n<p>\n  First, install <code>@google-cloud/pubsub</code> with npm:\n</p>\n\n<div hljs language=\"bash\">$ npm install --save @google-cloud/pubsub</div>\n\n<p>\n  If you are running your app on Google Compute Engine, you won't need to worry about supplying connection configuration options to <code>@google-cloud/pubsub</code>â€” we figure that out for you.\n</p>\n\n<p>\n  However, if you're running your app elsewhere, you will need to provide project details to authenticate API requests.\n</p>\n\n<h4>Google Cloud Platform</h4>\n<div hljs language=\"javascript\">\nvar pubsub = require('@google-cloud/pubsub')();\n</div>\n\n<h4>Elsewhere</h4>\n<div hljs language=\"javascript\">\nvar pubsub = require('@google-cloud/pubsub')({\n  projectId: 'grape-spaceship-123',\n  keyFilename: '/path/to/keyfile.json'\n});\n</div>\n\n<p>\n  The full set of options which can be passed to <code>@google-cloud/pubsub</code> are outlined in our <a href=\"#/docs/pubsub/v0.13.2/guides/authentication\">Authentication guide</a>.\n</p>\n","description":"","source":"packages\\pubsub\\src\\publisher.js","parent":"pubsub","children":[],"methods":[{"id":"Publisher","name":"Publisher","type":"constructor","description":"<p>A Publisher object allows you to publish messages to a specific topic.</p>","source":"packages\\pubsub\\src\\publisher.js#L54","resources":[{"title":"Topics: publish API Documentation","link":"https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics/publish"}],"examples":[{"code":"var topic = pubsub.topic('my-topic');\nvar publisher = topic.publisher();"}],"params":[],"exceptions":[],"returns":[]},{"id":"publish","name":"publish","type":"instance","description":"<p>Publish the provided message.</p>","source":"packages\\pubsub\\src\\publisher.js#L126","resources":[],"examples":[{"code":"var data = new Buffer('Hello, world!');\n\nvar callback = function(err, messageId) {\n  if (err) {\n    // Error handling omitted.\n  }\n};\n\npublisher.publish(data, callback);"},{"caption":"<p>Optionally you can provide an object containing attributes for the \nmessage.</p>","code":"var attributes = {\n  key: 'value'\n};\n\npublisher.publish(data, attributes, callback);"},{"caption":"<p>If the callback is omitted, we'll return a Promise.</p>","code":"publisher.publish(data).then(function(messageId) {});"}],"params":[{"name":"data","description":"<ul> <li>The message data. This must come in the form of a Buffer object.</li> </ul> ","types":["buffer"],"optional":false,"nullable":false},{"name":"attributes","description":"<ul> <li>Optional attributes for this message.</li> </ul> ","types":["object"],"optional":true,"nullable":false},{"name":"callback","description":"<ul> <li>The callback function. If omitted a Promise will be returned.</li> </ul> ","types":["function"],"optional":true,"nullable":false},{"name":"callback.error","description":"<ul> <li>An error returned while making this request.</li> </ul> ","types":["error"],"optional":false,"nullable":true},{"name":"callback.messageId","description":"<ul> <li>The id for the message.</li> </ul> ","types":["string"],"optional":false,"nullable":false}],"exceptions":[{"type":"TypeError","description":"<p>If data is not a Buffer object.</p>"}],"returns":[]}],"path":"publisher.json"}